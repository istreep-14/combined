json_path,type,description
game.areFriends,boolean,"Whether the two players are friends"
game.canSendTrophy,boolean,"Whether a trophy can be sent"
game.changesPlayersRating,number,"1 if game affects ratings; 0 if not"
game.colorOfWinner,string,"Color of the winner (white|black)"
game.id,number,"Internal callback game ID"
game.uuid,string,"Callback game UUID"
game.initialSetup,string,"Initial setup FEN or empty string"
game.isLiveGame,boolean,"Live vs correspondence indicator"
game.isAbortable,boolean,"Whether game is abortable"
game.isAnalyzable,boolean,"Whether analysis is enabled"
game.isCheckmate,boolean,"Game ended by checkmate (boolean flag)"
game.isStalemate,boolean,"Game ended by stalemate (boolean flag)"
game.isFinished,boolean,"Game finished flag"
game.isRated,boolean,"Rated flag"
game.isResignable,boolean,"Whether resignation is allowed"
game.lastMove,string,"Last move indicator string"
game.moveList,string,"Encoded move list string"
game.plyCount,number,"Number of half-moves"
game.ratingChange,number,"Net rating change for winner/loser (may mirror color-specific fields)"
game.ratingChangeWhite,number,"Rating change for white side"
game.ratingChangeBlack,number,"Rating change for black side"
game.gameEndReason,string,"End reason token (e.g., timeout, checkmated, bughousepartnerlose)"
game.resultMessage,string,"Human-readable summary (e.g., 'X won on time')"
game.endTime,number,"End time epoch seconds"
game.turnColor,string,"Side to move at capture time (white|black)"
game.type,string,"Variant/rules short code (e.g., chess, chess960, bughouse)"
game.typeName,string,"Human-readable variant name"
game.allowVacation,boolean,"Whether vacation is allowed (correspondence contexts)"
game.pgnHeaders.Event,string,"PGN Event"
game.pgnHeaders.Site,string,"PGN Site"
game.pgnHeaders.Date,string,"PGN local date (yyyy.MM.dd)"
game.pgnHeaders.White,string,"PGN White username"
game.pgnHeaders.Black,string,"PGN Black username"
game.pgnHeaders.Result,string,"PGN result token (1-0|0-1|1/2-1/2)"
game.pgnHeaders.ECO,string,"PGN ECO code"
game.pgnHeaders.WhiteElo,number,"PGN White rating"
game.pgnHeaders.BlackElo,number,"PGN Black rating"
game.pgnHeaders.TimeControl,string,"PGN TimeControl string"
game.pgnHeaders.EndTime,string,"PGN local end time string"
game.pgnHeaders.Termination,string,"PGN human-readable termination"
game.pgnHeaders.SetUp,string,"PGN SetUp header; '1' indicates non-standard initial position"
game.pgnHeaders.FEN,string,"PGN initial setup FEN when SetUp='1'"
game.moveTimestamps,string,"Dense move timestamps string"
game.baseTime1,number,"Base time (seconds) from callback"
game.timeIncrement1,number,"Increment (seconds) from callback"
players.{side}.uuid,string,"Player UUID for the given side (top|bottom)"
players.{side}.isContentHidden,boolean,"Whether profile content is hidden"
players.{side}.id,number,"Player numeric ID"
players.{side}.isComputer,boolean,"Whether player is a computer account"
players.{side}.avatarUrl,string,"Avatar URL"
players.{side}.countryId,number,"Country ID"
players.{side}.isEnabled,boolean,"Whether the account is enabled"
players.{side}.canWinOnTime,boolean,"Whether side can win on time (contextual)"
players.{side}.color,string,"Player color (white|black)"
players.{side}.countryName,string,"Country name"
players.{side}.defaultTab,number,"Default tab code"
players.{side}.hasMovedAtLeastOnce,boolean,"Whether the side has moved at least once"
players.{side}.isDrawable,boolean,"Whether draw is available"
players.{side}.isOnline,boolean,"Online presence flag"
players.{side}.isInLivechess,boolean,"Whether in live chess session"
players.{side}.isTouchMove,boolean,"Touch move setting"
players.{side}.isVacation,boolean,"On vacation flag"
players.{side}.isWhiteOnBottom,boolean,"Board orientation preference"
players.{side}.lastLoginDate,number,"Last login epoch seconds"
players.{side}.location,string,"Freeform location"
players.{side}.membershipLevel,number,"Membership level numeric"
players.{side}.membershipCode,string,"Membership tier code (e.g., basic, diamond)"
players.{side}.memberSince,number,"Member since epoch seconds"
players.{side}.postMoveAction,string,"Post-move action setting"
players.{side}.rating,number,"Current rating at capture time"
players.{side}.turnTimeRemaining,string,"Readable remaining time string"
players.{side}.username,string,"Username"
players.{side}.vacationRemaining,string,"Readable remaining vacation"
players.{side}.gamesInProgress,number,"Concurrent games in progress"
players.{side}.friendRequestSent,boolean,"Friend request sent flag (this side)"
players.{side}.friendRequestReceived,boolean,"Friend request received flag (this side)"
players.{side}.isBlocked,boolean,"Whether blocked by the viewer"
players.{side}.isFriend,boolean,"Whether friends with the viewer"
players.{side}.flair.id,string,"Flair identifier (optional)"
players.{side}.flair.images.png,string,"Flair PNG URL (optional)"
players.{side}.flair.images.svg,string,"Flair SVG URL (optional)"
players.{side}.flair.images.lottie,string,"Flair Lottie URL (optional)"
friendRequestSent,boolean,"Top-level friend request sent (context)"
friendRequestReceived,boolean,"Top-level friend request received (context)"
