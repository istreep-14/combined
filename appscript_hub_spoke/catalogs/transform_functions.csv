function_name,purpose,input_fields,output_fields,simple_explanation
normalize_lowercase,"Normalize a string to lowercase and trim","any string","lowercased string","Make labels consistent by forcing them to lowercase"
parse_time_control,"Parse a PGN time control into base/inc/corr","time_control string","base_time, increment, correspondence_time","Split on '+' or '/' to pull out base seconds, increment, or correspondence seconds"
utc_pgn_to_epoch,"Convert UTCDate+UTCTime to epoch seconds","UTCDate, UTCTime","start_time_epoch","Combine date and time and parse as UTC to get a numeric timestamp"
to_local_datetime,"Format an epoch as local datetime","epoch seconds","yyyy-MM-dd HH:mm:ss","Turn a numeric timestamp into a local time string"
extract_date,"Get yyyy-MM-dd from a datetime string","local datetime","date","Just keep the date part from a timestamp"
identity_my_color,"Resolve my color by configured username","config USERNAME, PGN White, PGN Black","my_color","If my username equals White then I'm white; if equals Black then I'm black"
select_by_color,"Pick the right player's field by color","white.*, black.*, my_color","my fields (rating/result) or opp fields","Choose white or black data depending on my_color"
map_result_to_outcome,"Map result codes to win/loss/draw","result code","outcome","Translate engine codes like 'checkmated', 'timeout' to win/loss/draw"
end_reason_policy,"Compute end_reason per loser policy","white.result, black.result","end_reason","Pick the losing side's raw result; for draws use the draw code"
derive_format_spec,"Derive canonical format from rules+time_class","rules, time_class","format","Use your rule: chess → time_class; chess960 → live960/daily960; variants → rule name"
extract_pgn_moves,"Extract movetext after headers","full PGN","pgn_moves","Skip the header lines (square brackets) then return the move text"
callback_overlay,"Read callback pregame and exact delta","callback JSON","my/opp pregame_cb, delta_cb","Use callback endpoints to populate accurate rating changes"
last_based_delta,"Compute last-based pregame and delta per format","format, my_rating_end, stored last","my/opp pregame_last, delta_last","Remember the last rating seen for each format and subtract to get the change"
final_delta_select,"Choose final delta preferring callback when non-zero","delta_cb, delta_last","final delta","If callback delta exists and isn't zero, use it, otherwise keep the last-based one"
