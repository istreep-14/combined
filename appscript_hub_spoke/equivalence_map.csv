field_concept,archive_json_key,pgn_key,callback_key,units,precedence,notes
url,games[].url,Link,,n/a,"URL (archive/PGN) → primary key","Callback url can be constructed from mode+id when needed"
game_id,derived from url last segment,,game.id,number,"Use for joins/validation","Build callback URL: https://www.chess.com/callback/{live|daily}/game/{id}"
game_uuid,games[].uuid,,game.uuid,string,"Optional, for joins/validation","May be missing in older exports; do not key on UUID"
rated_flag,games[].rated,,game.isRated,boolean,"Archive first; callback confirm","Rated boolean"
rules/variant,games[].rules,,game.type,string,"Archive first; callback confirm","Use callback typeName for display only"
time_control,games[].time_control,TimeControl,baseTime1|timeIncrement1,string|deciseconds,"Archive/PGN first; callback is deciseconds","Callback values ÷10 to seconds; with '/' indicates daily, '+' indicates live"
time_class,games[].time_class,,isLiveGame,string|boolean,"Compute from time_control; callback confirm","Bullet/Blitz/Rapid from 40-move heuristic; Daily from '/'"
end_time_epoch,games[].end_time,EndTime (local string),game.endTime,seconds|string,"Archive first; callback fallback","Localize epoch to project TZ; PGN EndTime is a local string"
start_time_epoch,derived UTCDate+UTCTime,UTCDate+UTCTime,approx from moveTimestamps,seconds|string,"PGN UTC first; callback optional","Callback moveTimestamps are deciseconds; can bound elapsed time"
winner,derived from white/black.result,Result,colorOfWinner,string,"Archive per-side first; PGN; callback confirm","PGN 1-0/0-1/1/2-1/2 encodes winner/draw"
end_reason,loser-side of white/black.result,Termination (text),gameEndReason,token|text,"Archive token first; callback confirm; PGN text","Bughouse: bughousepartnerlose ⇒ partner board ended; otherwise this board"
termination_text,,Termination,resultMessage,text,"PGN first; callback fallback","Human-readable message"
white_post_rating,games[].white.rating,WhiteElo,players.{color=white}.rating,number,"Archive/PGN equality; callback confirm","Post-game ratings across sources should match"
black_post_rating,games[].black.rating,BlackElo,players.{color=black}.rating,number,"Archive/PGN equality; callback confirm","Post-game ratings across sources should match"
rating_delta_white,,,(game.ratingChangeWhite),number,"Callback only","Exact delta; overlay last-based when non-zero"
rating_delta_black,,,(game.ratingChangeBlack),number,"Callback only","Exact delta; overlay last-based when non-zero"
pgn_movetext,games[].pgn (body),Movetext, ,text,"PGN/Archive text is source of truth","Ignore callback moveList if not needed"
moves_encoded,games[].tcn,,game.moveList,string,"Archive/Callback equivalent","Same encoding; optional if you keep PGN text"
move_timestamps,derived from PGN [%clk],,game.moveTimestamps,seconds|deciseconds,"PGN-derived first; callback optional","PGN [%clk] yields remaining-time per ply (seconds); callback provides deciseconds (÷10 → seconds)"
final_fen,games[].fen,, ,FEN,"Archive authoritative","Final position at game end"
initial_setup,games[].initial_setup,FEN (when SetUp=1),game.initialSetup,FEN,"PGN/Archive equivalence","Present when SetUp=""1"""
setup_flag,,SetUp,,string/boolean,"PGN primary","""1"" indicates non-standard initial position"
current_position,,CurrentPosition,,FEN,"PGN informational","Snapshot at save time; not necessarily final"
eco_code,,ECO,game.pgnHeaders.ECO,string,"PGN primary","Small ECO code (e.g., B01)"
eco_url,games[].eco,ECOUrl,,url,"Archive/PGN equivalence","URL to opening page; can later enrich eco_name"
event_name,,Event,game.pgnHeaders.Event,string,"PGN primary","Also a live/daily cue (Live Chess vs Let's Play!)"
site,,Site,game.pgnHeaders.Site,string,"PGN primary","Provider or location"
round_label,,Round,game.pgnHeaders.Round,string,"PGN primary","Round or '-'"
tournament_url,games[].tournament,Tournament,,url,"Archive/PGN mapping","Tournament link when present"
match_url,games[].match,, ,url,"Archive only","Match link when present"
accuracies_white,games[].accuracies.white,, ,percent,"Archive only","Engine accuracy percent when available"
accuracies_black,games[].accuracies.black,, ,percent,"Archive only","Engine accuracy percent when available"
player_uuid_white,games[].white.uuid,,players.{color=white}.uuid,string,"Archive first; callback fallback","Member identity; not a game identifier"
player_uuid_black,games[].black.uuid,,players.{color=black}.uuid,string,"Archive first; callback fallback","Member identity; not a game identifier"
profile_url_white,games[].white.@id, , ,url,"Archive only","Public profile URL"
profile_url_black,games[].black.@id, , ,url,"Archive only","Public profile URL"
turn_color,,,game.turnColor,enum,"Callback only","Whose turn at capture/end; UI context"
base_time_deciseconds,,,game.baseTime1,deciseconds,"Callback only","Divide by 10 to get seconds"
increment_deciseconds,,,game.timeIncrement1,deciseconds,"Callback only","Divide by 10 to get seconds"
move_timestamps_deciseconds,,,game.moveTimestamps,deciseconds,"Callback only","Remaining-time snapshots per ply; ÷10 → seconds"
game_last_move,,,game.lastMove,string,"Callback only","Short marker string for last move (UI/debug)"
cap_is_abortable,,,game.isAbortable,boolean,"Callback only","Live relevance"
cap_is_analyzable,,,game.isAnalyzable,boolean,"Callback only","Analysis allowed"
cap_is_resignable,,,game.isResignable,boolean,"Callback only","Resignation possible"
cap_allow_vacation,,,game.allowVacation,boolean,"Callback only","Daily relevance; low priority"
social_are_friends,,,game.areFriends,boolean,"Callback only","Social relationship"
social_can_send_trophy,,,game.canSendTrophy,boolean,"Callback only","UI affordance"
social_friend_request_sent,,,friendRequestSent,boolean,"Callback only","Top-level"
social_friend_request_received,,,friendRequestReceived,boolean,"Callback only","Top-level"
player_id_white,,,players.{color=white}.id,number,"Callback only","Numeric user id"
player_id_black,,,players.{color=black}.id,number,"Callback only","Numeric user id"
player_membership_code_white,,,players.{color=white}.membershipCode,string,"Callback only","Membership tier"
player_membership_code_black,,,players.{color=black}.membershipCode,string,"Callback only","Membership tier"
player_membership_level_white,,,players.{color=white}.membershipLevel,number,"Callback only","Membership level"
player_membership_level_black,,,players.{color=black}.membershipLevel,number,"Callback only","Membership level"
player_avatar_url_white,,,players.{color=white}.avatarUrl,url,"Callback only","Avatar image URL"
player_avatar_url_black,,,players.{color=black}.avatarUrl,url,"Callback only","Avatar image URL"
player_country_id_white,,,players.{color=white}.countryId,number,"Callback only","Country numeric id"
player_country_id_black,,,players.{color=black}.countryId,number,"Callback only","Country numeric id"
player_country_name_white,,,players.{color=white}.countryName,string,"Callback only","Country name"
player_country_name_black,,,players.{color=black}.countryName,string,"Callback only","Country name"
player_is_online_white,,,players.{color=white}.isOnline,boolean,"Callback only","Presence"
player_is_online_black,,,players.{color=black}.isOnline,boolean,"Callback only","Presence"
player_is_in_livechess_white,,,players.{color=white}.isInLivechess,boolean,"Callback only","Presence in live chess"
player_is_in_livechess_black,,,players.{color=black}.isInLivechess,boolean,"Callback only","Presence in live chess"
player_last_login_epoch_white,,,players.{color=white}.lastLoginDate,seconds,"Callback only","Epoch seconds"
player_last_login_epoch_black,,,players.{color=black}.lastLoginDate,seconds,"Callback only","Epoch seconds"
player_member_since_epoch_white,,,players.{color=white}.memberSince,seconds,"Callback only","Epoch seconds"
player_member_since_epoch_black,,,players.{color=black}.memberSince,seconds,"Callback only","Epoch seconds"
player_default_tab_white,,,players.{color=white}.defaultTab,number,"Callback only","UI context"
player_default_tab_black,,,players.{color=black}.defaultTab,number,"Callback only","UI context"
player_post_move_action_white,,,players.{color=white}.postMoveAction,string,"Callback only","UI behavior"
player_post_move_action_black,,,players.{color=black}.postMoveAction,string,"Callback only","UI behavior"
player_is_touch_move_white,,,players.{color=white}.isTouchMove,boolean,"Callback only","UI preference"
player_is_touch_move_black,,,players.{color=black}.isTouchMove,boolean,"Callback only","UI preference"
player_games_in_progress_white,,,players.{color=white}.gamesInProgress,number,"Callback only","Ongoing games count"
player_games_in_progress_black,,,players.{color=black}.gamesInProgress,number,"Callback only","Ongoing games count"
player_vacation_remaining_white,,,players.{color=white}.vacationRemaining,string,"Callback only","Daily context"
player_vacation_remaining_black,,,players.{color=black}.vacationRemaining,string,"Callback only","Daily context"
player_turn_time_remaining_white,,,players.{color=white}.turnTimeRemaining,string,"Callback only","Mainly daily"
player_turn_time_remaining_black,,,players.{color=black}.turnTimeRemaining,string,"Callback only","Mainly daily"
player_is_blocked_white,,,players.{color=white}.isBlocked,boolean,"Callback only","Relationship flag"
player_is_blocked_black,,,players.{color=black}.isBlocked,boolean,"Callback only","Relationship flag"
player_is_friend_white,,,players.{color=white}.isFriend,boolean,"Callback only","Relationship flag"
player_is_friend_black,,,players.{color=black}.isFriend,boolean,"Callback only","Relationship flag"
player_is_enabled_white,,,players.{color=white}.isEnabled,boolean,"Callback only","Account state"
player_is_enabled_black,,,players.{color=black}.isEnabled,boolean,"Callback only","Account state"
player_is_content_hidden_white,,,players.{color=white}.isContentHidden,boolean,"Callback only","Profile visibility"
player_is_content_hidden_black,,,players.{color=black}.isContentHidden,boolean,"Callback only","Profile visibility"
player_flair_id_white,,,players.{color=white}.flair.id,string,"Callback only","Optional flair"
player_flair_id_black,,,players.{color=black}.flair.id,string,"Callback only","Optional flair"
player_flair_images_white,,,players.{color=white}.flair.images.png|svg|lottie,url,"Callback only","Flair assets"
player_flair_images_black,,,players.{color=black}.flair.images.png|svg|lottie,url,"Callback only","Flair assets"
