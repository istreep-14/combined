concept,json_path,pgn_key,callback_path,type,notes
game_url,games[].url,Link,,string,"PGN Link equals JSON url; primary key"
pgn_full_text,games[].pgn,"(headers+movetext)",game.moveList + game.pgnHeaders,text,"Same PGN content expressed differently (JSON has full PGN string)"
time_control,games[].time_control,TimeControl,game.baseTime1|game.timeIncrement1,string|number,"JSON/PGN share string; callback splits into base/inc seconds"
end_time_epoch,games[].end_time,EndTime,game.endTime,number|string,"JSON/Callback give epoch; PGN EndTime is local string"
rated_flag,games[].rated,,game.isRated,boolean,"Rated flag across JSON and callback"
final_fen,games[].fen,CurrentPosition,,string,"JSON fen is final position; PGN CurrentPosition is snapshot at save time"
time_class,games[].time_class,,,string,"Raw time class only in JSON"
rules_variant,games[].rules,,game.type|string:game.typeName,string,"Variant in JSON (rules) and callback (type/typeName)"
white_username,games[].white.username,White,players.{side=white}.username,string,"Callback side determined by color field in players.{side}"
black_username,games[].black.username,Black,players.{side=black}.username,string,"Callback side determined by color field in players.{side}"
white_post_rating,games[].white.rating,,,(number),"Post-game rating (JSON only). Not in PGN/Callback as post rating"
black_post_rating,games[].black.rating,,,(number),"Post-game rating (JSON only). Not in PGN/Callback as post rating"
white_pregame_rating,,WhiteElo,players.{side=white}.rating,number,"PGN/Callback expose pregame; differs from JSON post rating"
black_pregame_rating,,BlackElo,players.{side=black}.rating,number,"PGN/Callback expose pregame; differs from JSON post rating"
white_result_code,games[].white.result,Result,game.colorOfWinner|game.gameEndReason,string,"JSON has per-side code; PGN has 1-0/0-1; callback splits winner color and reason"
black_result_code,games[].black.result,Result,game.colorOfWinner|game.gameEndReason,string,"Mirror of white; outcome implied by PGN token"
eco,games[].eco,ECO|ECOUrl,game.pgnHeaders.ECO,string|url,"JSON has ECO url; PGN has ECO and ECOUrl; callback mirrors PGN headers"
event_name,,Event,game.pgnHeaders.Event,string,"PGN/Callback only"
site,,Site,game.pgnHeaders.Site,string,"PGN/Callback only"
date_local,,Date,game.pgnHeaders.Date,string,"Local date (PGN/Callback headers)"
white_elo_pgn,,WhiteElo,game.pgnHeaders.WhiteElo,number,"PGN/Callback headers only (pregame)"
black_elo_pgn,,BlackElo,game.pgnHeaders.BlackElo,number,"PGN/Callback headers only (pregame)"
termination_human,,Termination,game.resultMessage,string,"Human-readable termination message"
initial_setup_fen,games[].initial_setup,FEN,game.initialSetup,string,"Initial setup FEN when SetUp='1'"
setup_flag,,SetUp,game.pgnHeaders.SetUp,string,"'1' indicates non-standard initial position"
timezone_tag,,Timezone,,string,"Timezone tag only in PGN"
utc_date_time,,UTCDate|UTCTime,,string,"UTC headers only in PGN"
current_position,,CurrentPosition,,string,"PGN snapshot; not equal to JSON final fen"
white_profile_url,games[].white.@id,,,url,"Profile URL (JSON only)"
black_profile_url,games[].black.@id,,,url,"Profile URL (JSON only)"
white_uuid,games[].white.uuid,,players.{side=white}.uuid,string,"UUID available in JSON and Callback"
black_uuid,games[].black.uuid,,players.{side=black}.uuid,string,"UUID available in JSON and Callback"
white_numeric_id,,,players.{side=white}.id,number,"Numeric user id (Callback only)"
black_numeric_id,,,players.{side=black}.id,number,"Numeric user id (Callback only)"
white_country,,,players.{side=white}.countryName,string,"Country (Callback only)"
black_country,,,players.{side=black}.countryName,string,"Country (Callback only)"
